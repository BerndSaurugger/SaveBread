image: python:3.10

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"


default:
  cache:
    paths:
      - .cache/pip
      - venv/
  before_script:
    - python --version
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate


stages:
  - test
  - build
  - deploy


unit_test:
  stage: test
  tags:
    - gpu
  script:
    - pip3 install -r tests/test_requirements.txt
    - coverage run -m pytest
    - coverage report
    - coverage xml
  coverage: '/TOTAL.*\s([.\d]+)%/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

code_quality:
  stage: test
  tags:
    - gpu
  script:
    - echo '-- Executing Flake8 --'
    - pip install flake8
    - flake8 src/


build_package:
  stage: deploy
  tags:
    - gpu
  script:
    - python setup.py bdist_wheel
  artifacts:
    paths:
      - dist/*.whl

doc_pages:
  stage: deploy
  tags:
    - gpu
  script:
    - pip install sphinx sphinx-rtd-theme
    - cd docs
    - sphinx-apidoc -o . ../src
    - make html
    - mv _build/html/ ../public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy_webapp:
  stage: deploy
  tags:
    - gpu
  script:
    - apt-get update -yq
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP --api_key=$HEROKU_API_KEY
  only:
    - main

create_container:
  stage: build
  tags:
    - gpu
  before_script: []
  tags: 
    - gpu
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG

send-snapshot:
  stage: deploy
  tags:
    - gpu
  script:
    - if [[ ! $CI_COMMIT_TAG =~ ^v?[0-9]+\.[0-9]+ ]]; then exit 0; fi
    - pip install gitlab2zenodo
    - git archive --format zip --output ${CI_COMMIT_TAG#v}.zip ${CI_COMMIT_TAG}
    - g2z-send -s -m .zenodo.json ${CI_COMMIT_TAG#v}.zip
  only:
    - tags